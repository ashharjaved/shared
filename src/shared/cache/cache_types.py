from typing import Protocol, Any, Optional

class CacheLike(Protocol):
    async def get(self, key: str) -> Optional[str]: ...
    async def set(self, key: str, value: Any, ex: Optional[int] = None, nx: bool = False) -> bool: ...
    async def delete(self, key: str) -> bool: ...
    async def incr(self, key: str) -> int: ...
    async def expire(self, key: str, ttl: int) -> bool: ...
    async def ttl(self, key: str) -> int: ...

class JsonCacheLike(CacheLike, Protocol):
    async def get_json(self, key: str) -> Optional[Any]: ...
    async def set_json(self, key: str, value: Any, ex: Optional[int] = None) -> bool: ...
    